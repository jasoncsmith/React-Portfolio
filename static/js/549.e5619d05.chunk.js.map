{"version":3,"file":"static/js/549.e5619d05.chunk.js","mappings":"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","sources":["api/index.ts","webpack://jfolio-client/./src/components/Button/index.module.scss?7cda","components/Button/index.tsx","webpack://jfolio-client/./src/components/Fade/index.module.scss?3c79","components/Fade/index.tsx","components/Icon/index.tsx","webpack://jfolio-client/./src/components/Loader/index.module.scss?7feb","components/Loader/index.tsx","utilities/storage.ts","hooks/useLocalStorage.ts","api/user.ts","components/ContactForm/helpers.tsx","utilities/sanitize.ts","webpack://jfolio-client/./src/components/FieldLabel/index.module.scss?6830","components/FieldLabel/index.tsx","webpack://jfolio-client/./src/components/FieldInput/index.module.scss?ae65","components/FieldInput/index.tsx","webpack://jfolio-client/./src/components/FieldMessage/index.module.scss?8960","components/FieldMessage/index.tsx","webpack://jfolio-client/./src/components/Field/index.module.scss?9174","components/Field/index.tsx","webpack://jfolio-client/./src/components/FieldInputTrap/index.module.scss?31ef","components/FieldInputTrap/index.tsx","webpack://jfolio-client/./src/components/FieldTextArea/index.module.scss?145b","components/FieldTextArea/index.tsx","webpack://jfolio-client/./src/components/ContactForm/index.module.scss?2889","components/ContactForm/index.tsx","components/ContactForm/components/SuccessMessage/index.tsx","hooks/useOnOutsideClick.ts","components/Modal/store.tsx","components/Layout/Inline/index.tsx","webpack://jfolio-client/./src/components/Modal/components/ModalWarning/index.module.scss?be95","components/Modal/components/ModalWarning/index.tsx","webpack://jfolio-client/./src/components/Modal/components/ModalContent/index.module.scss?ff59","components/Modal/index.tsx","components/Modal/components/ModalContent/index.tsx","components/Toast/index.ts","components/ContactFormController/index.tsx","utilities/strings.ts","views/Contact/index.tsx"],"sourcesContent":["import axios from 'axios'\n// const baseURL = process.env.REACT_APP_API_ENDPOINT\n// TODO: setup secrets on github\nconst baseURL = 'https://api-gaxpa6b7ta-uc.a.run.app'\n\nconst client = axios.create({ baseURL })\n\nexport default client\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__85C4R\",\"button--primary\":\"Button_button--primary__aNaOs\",\"button--ghost\":\"Button_button--ghost__7hC48\",\"button__text\":\"Button_button__text__SkwgW\",\"button__loader\":\"Button_button__loader__w7pH0\",\"button--is-loading\":\"Button_button--is-loading__4WX7w\"};","import React, { HTMLAttributes } from 'react'\nimport classNames from 'classnames'\nimport Loader from '../Loader'\nimport Icon, { IconProps } from '../Icon'\nimport styles from './index.module.scss'\n\ntype LinkProps = {\n  buttonType: 'link'\n  href: string\n  target?: '_blank'\n  isLoading?: never\n  disabled?: never\n}\n\ntype ButtonProps = {\n  buttonType: 'button'\n  type?: 'button' | 'submit'\n  isLoading?: boolean\n  disabled?: boolean\n}\n\ninterface ComponentProps extends HTMLAttributes<HTMLButtonElement | HTMLAnchorElement> {\n  children?: string\n  variant?: 'primary' | 'secondary' | 'ghost'\n  iconName?: IconProps['iconName']\n  className?: string\n  isLoading?: boolean\n  disabled?: boolean\n}\n\nconst Button = ({\n  children = '',\n  className = '',\n  buttonType = 'button',\n  variant = 'primary',\n  isLoading = false,\n  iconName,\n  ...props\n}: ComponentProps & (ButtonProps | LinkProps)) => {\n  const Component = buttonType === 'link' ? 'a' : 'button'\n  return (\n    <Component\n      className={classNames({\n        [styles.button]: true,\n        [styles['button--is-loading']]: isLoading,\n        [styles[`button--${variant}`]]: variant,\n        [className]: !!className,\n      })}\n      {...props}\n    >\n      {isLoading && <Loader className={styles.button__loader} />}\n      {!!iconName && <Icon iconName={iconName} />}\n      {children && <span className={styles.button__text}>{children}</span>}\n    </Component>\n  )\n}\n\nexport default Button\n","// extracted by mini-css-extract-plugin\nexport default {\"base\":\"Fade_base__rYYws\",\"base-has-translate\":\"Fade_base-has-translate__NAioa\",\"base--is-hidden\":\"Fade_base--is-hidden__DCRQT\",\"base--has-translate\":\"Fade_base--has-translate__msRZr\"};","import React, { useEffect, useRef, useState } from 'react'\nimport classNames from 'classnames'\nimport styles from './index.module.scss'\n\ninterface FadeProps {\n  animationToggle?: boolean\n  animationTranslate?: boolean\n  children: React.ReactNode\n}\n\nconst Fade = ({ children, animationToggle = false, animationTranslate = true }: FadeProps) => {\n  const ref = useRef(null)\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const currentRef = ref?.current\n    if (!currentRef) return\n\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (animationToggle === true) {\n          setIsVisible(entry.isIntersecting)\n        } else {\n          entry.isIntersecting && setIsVisible(true)\n        }\n      })\n    })\n\n    observer.observe(currentRef)\n\n    return () => observer.unobserve(currentRef)\n  })\n\n  return (\n    <div\n      ref={ref}\n      className={classNames({\n        [styles.base]: true,\n        [styles['base--is-hidden']]: !isVisible,\n        [styles['base--has-translate']]: animationTranslate,\n      })}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Fade\n","import React from 'react'\nimport { IconBaseProps } from 'react-icons'\nimport * as Bs from 'react-icons/bs'\nimport * as io5 from 'react-icons/io5'\nimport * as io from 'react-icons/io'\nimport * as fa from 'react-icons/fa'\n// TODO: monitor file size and optimize if necessary\n// npm install @react-icons/all-files --save -> import { FaBeer } from \"@react-icons/all-files/fa/FaBeer\";\nconst IconSet = { ...Bs, ...io5, ...io, ...fa }\n\nexport interface IconProps extends IconBaseProps {\n  iconName: keyof typeof IconSet\n  className?: string\n}\n\nconst Icon: React.FC<IconProps> = ({ iconName, className = '', ...props }: IconProps) => {\n  const IconName = IconSet[iconName]\n  return IconName ? <IconName className={className} {...props} /> : null\n}\n\nexport default Icon\n","// extracted by mini-css-extract-plugin\nexport default {\"loader-container\":\"Loader_loader-container__IPSf0\",\"loader\":\"Loader_loader__gPW3M\",\"rotating\":\"Loader_rotating__XRlrH\"};","import classNames from 'classnames'\nimport { LuLoader2 } from 'react-icons/lu'\nimport styles from './index.module.scss'\n\nexport default function Loader({ className = '' }: { className?: string; variant?: 'full-page' | 'inline' }) {\n  return (\n    <div\n      role=\"alert\"\n      aria-label=\"Loading\"\n      className={classNames({\n        [styles['loader-container']]: true,\n      })}\n    >\n      <LuLoader2\n        className={classNames({\n          [styles.loader]: true,\n          [className]: !!className,\n        })}\n      />\n    </div>\n  )\n}\n","export const getStorageItem = (key: string) => {\n  try {\n    const item = window.localStorage.getItem(key)\n    return item && JSON.parse(item)\n  } catch (error: unknown) {\n    return null\n  }\n}\n\nexport const setStorageItem = (key: string, data: unknown) => {\n  try {\n    window.localStorage.setItem(key, JSON.stringify(data))\n  } catch (error: unknown) {\n    return undefined\n  }\n}\n\nexport const removeStorageItem = (key: string) => {\n  try {\n    window.localStorage.removeItem(key)\n  } catch (error) {\n    return undefined\n  }\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { getStorageItem, setStorageItem } from '../utilities/storage'\n\nconst useLocalStorage = <T>(key: string, initialState: T | null = null): [T, Dispatch<SetStateAction<T>>] => {\n  const [data, setData] = useState<T>(() => getStorageItem(key) || initialState)\n\n  useEffect(() => {\n    setStorageItem(key, data)\n  }, [data])\n\n  return [data, setData]\n}\n\nexport default useLocalStorage\n","import { AxiosResponse } from 'axios'\nimport client from '.'\nimport { User, ContactFormModel } from '../components/ContactFormController'\n\nexport const createUser = (data: ContactFormModel): Promise<AxiosResponse<User>> =>\n  client.post(`api/v1/users`, data)\n","import { ContactFormModel } from '../ContactFormController'\n\ninterface FormError {\n  firstName: string\n  lastName: string\n  email: string\n  comments: string\n}\n\nconst validateEmail = ({ email }: { email: string }) =>\n  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)\n\nexport const validateForm = (values: ContactFormModel): FormError => {\n  const errors = {} as FormError\n\n  if (values.firstName.length < 2) {\n    errors.firstName = 'Required'\n  } else if (values.firstName.length > 25) {\n    errors.firstName = 'Must be 25 characters or less'\n  }\n\n  if (values.lastName.length < 2) {\n    errors.lastName = 'Required'\n  } else if (values.lastName.length > 25) {\n    errors.lastName = 'Must be 25 characters or less'\n  }\n\n  if (!values.email) {\n    errors.email = 'Required'\n  } else if (validateEmail(values)) {\n    errors.email = 'Please enter a valid email address'\n  }\n\n  if (!values.comments) {\n    errors.comments = 'Required'\n  } else if (values.comments.length < 5) {\n    errors.comments = 'Please enter at least 5 characters'\n  }\n\n  return errors\n}\n","/**\n *\n * @param {string} str input to remove special chars\n * @returns {string} sanitized string\n */\nexport function sanitize(str: string) {\n  const map: Record<string, string> = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '/': '&#x2F;',\n  }\n  const regEx = /[&<>\"'/]/gi\n  return str.replace(regEx, (val: string) => map[val])\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"FieldLabel_label__RotDe\",\"label--is-hidden\":\"FieldLabel_label--is-hidden__9Vriq\"};","import React from 'react'\nimport classNames from 'classnames'\nimport styles from './index.module.scss'\n\ninterface FieldLabelProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  id: string\n  hideLabel?: boolean\n  className?: string\n  error?: boolean\n  children: React.ReactNode\n}\n\nfunction FieldLabel({ id, error = false, hideLabel = true, children }: FieldLabelProps) {\n  return (\n    <label\n      className={classNames({\n        [styles.label]: true,\n        [styles['label--is-invalid']]: error,\n        [styles['label--is-hidden']]: hideLabel,\n      })}\n      htmlFor={id}\n    >\n      {children}\n    </label>\n  )\n}\n\nexport default FieldLabel\n","// extracted by mini-css-extract-plugin\nexport default {\"field-input\":\"FieldInput_field-input__5CHko\",\"field-input--light\":\"FieldInput_field-input--light__9OGWQ\",\"field-input--dark\":\"FieldInput_field-input--dark__M8Vzk\",\"field-input--is-invalid\":\"FieldInput_field-input--is-invalid__UpUh9\"};","import React, { forwardRef } from 'react'\nimport classNames from 'classnames'\n\nimport styles from './index.module.scss'\n\ninterface FieldInputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  id: string\n  name: string\n  type?: React.HTMLInputTypeAttribute // should type be required\n  className?: string\n  error: boolean\n  valid?: boolean\n  variant?: 'dark' | 'light'\n}\n\nconst FieldInput = forwardRef<HTMLInputElement, FieldInputProps>(function FieldInput(\n  { id, name, type = 'text', error, valid, ...props }: FieldInputProps,\n  ref: React.Ref<HTMLInputElement>\n) {\n  return (\n    <input\n      id={id}\n      ref={ref}\n      name={name}\n      type={type}\n      className={classNames({\n        [styles['field-input']]: true,\n        [styles['field-input--is-invalid']]: error,\n        [styles['field-input--is-valid']]: valid,\n      })}\n      {...props}\n    />\n  )\n})\n\nexport default FieldInput\n","// extracted by mini-css-extract-plugin\nexport default {\"validation-message\":\"FieldMessage_validation-message__NibMX\",\"validation-message--is-invalid\":\"FieldMessage_validation-message--is-invalid__0B5ND\",\"validation-message--is-valid\":\"FieldMessage_validation-message--is-valid__TzUA5\"};","import React from 'react'\nimport classNames from 'classnames'\n\nimport styles from './index.module.scss'\n\ninterface FieldMessageProps {\n  error: boolean\n  children: React.ReactNode\n}\n\nconst FieldMessage = ({ error, children }: FieldMessageProps) =>\n  error ? (\n    <span\n      className={classNames({\n        [styles['validation-message']]: true,\n        [styles['validation-message--is-invalid']]: error,\n        [styles['validation-message--is-valid']]: false,\n      })}\n    >\n      {children}\n    </span>\n  ) : null\n\nexport default FieldMessage\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"Field_field__wn5IX\"};","import React, { forwardRef } from 'react'\n\nimport FieldLabel from '../FieldLabel'\nimport FieldInput from '../FieldInput'\nimport FieldMessage from '../FieldMessage'\n\nimport styles from './index.module.scss'\n\n// TODO HOW TO PASS IN INDVIDUAL PROPS\ninterface FieldProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  id: string\n  ref?: React.Ref<HTMLInputElement>\n  type: React.HTMLInputTypeAttribute\n  name: string\n  error: boolean\n  msg?: string\n  label?: string\n  hideLabel?: boolean // do we need this\n  className?: string\n}\n\nconst Field = forwardRef(function Field(\n  { id, name, error, msg, label, hideLabel = true, type = 'text', ...props }: FieldProps,\n  ref: React.Ref<HTMLInputElement>\n) {\n  // TODO weigh variant\n  // how to do input variant dark, light vs error, valid variant. not sure state should be a variant?\n  const generatedID = `field-${type}-${id}`\n\n  return (\n    <div className={styles.field}>\n      {label && (\n        <FieldLabel id={generatedID} error={error} hideLabel={hideLabel}>\n          {label}\n        </FieldLabel>\n      )}\n      <FieldInput ref={ref} id={generatedID} name={name} type={type} error={error} {...props} />\n      {msg && <FieldMessage error={error}>{msg}</FieldMessage>}\n    </div>\n  )\n})\n\nexport default Field\n","// extracted by mini-css-extract-plugin\nexport default {\"confirmEmail\":\"FieldInputTrap_confirmEmail__ReCfs\"};","import React from 'react'\nimport styles from './index.module.scss'\n\ninterface FieldInputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst FieldInputTrap = (props: FieldInputProps) => (\n  <input className={styles.confirmEmail} type=\"text\" {...props} />\n)\n\nexport default FieldInputTrap\n","// extracted by mini-css-extract-plugin\nexport default {\"control-textarea\":\"FieldTextArea_control-textarea__mNfp2\",\"textarea\":\"FieldTextArea_textarea__s0dgR\",\"textarea--is-invalid\":\"FieldTextArea_textarea--is-invalid__7viYK\"};","import React, { forwardRef } from 'react'\nimport classNames from 'classnames'\n\nimport FieldLabel from '../FieldLabel'\nimport FieldMessage from '../FieldMessage'\nimport styles from './index.module.scss'\n\ninterface FieldTextAreaProps extends React.InputHTMLAttributes<HTMLTextAreaElement> {\n  name: string\n  id: string\n  label?: string\n  hideLabel?: boolean\n  msg?: string\n  className?: string\n  error: boolean\n  valid?: boolean\n  rows?: number\n  cols?: number\n}\n\nconst FieldTextArea = forwardRef(function FieldTextArea(\n  { id, name, msg, label, hideLabel = false, error, valid, ...props }: FieldTextAreaProps,\n  ref: React.Ref<HTMLTextAreaElement>\n) {\n  const generatedId = `control-textarea-${id}`\n\n  return (\n    <div className={styles['control-textarea']}>\n      {label && (\n        <FieldLabel id={generatedId} hideLabel={hideLabel}>\n          {label}\n        </FieldLabel>\n      )}\n\n      <textarea\n        ref={ref}\n        id={generatedId}\n        name={name}\n        className={classNames({\n          [styles.textarea]: true,\n          [styles['textarea--is-invalid']]: error,\n          [styles['textarea--is-valid']]: valid,\n        })}\n        {...props}\n      />\n\n      {msg && <FieldMessage error={error}>{msg}</FieldMessage>}\n    </div>\n  )\n})\n\nexport default FieldTextArea\n","// extracted by mini-css-extract-plugin\nexport default {\"contact-form\":\"ContactForm_contact-form__YS+Nw\",\"placeholder\":\"ContactForm_placeholder__FEzGD\",\"contact-form__column\":\"ContactForm_contact-form__column__g5HhS\",\"contact-form__group\":\"ContactForm_contact-form__group__QPovm\",\"field\":\"ContactForm_field__THCxO\",\"contact-form__btn-submit\":\"ContactForm_contact-form__btn-submit__KpoAO\"};","import { useEffect, useRef } from 'react'\nimport { FormikProps } from 'formik'\n\nimport Field from '../Field'\nimport FieldInputTrap from '../FieldInputTrap'\nimport FieldLabel from '../FieldLabel'\nimport FieldTextArea from '../FieldTextArea'\nimport Button from '../Button'\nimport Fade from '../Fade'\n\nimport { ContactFormModel } from '../ContactFormController'\n\nimport styles from './index.module.scss'\n\ninterface ContactFormProps {\n  handler: FormikProps<ContactFormModel>\n  isWaiting: boolean\n}\n\nconst ContactForm = ({ handler, isWaiting }: ContactFormProps) => {\n  const refNameInput = useRef<HTMLInputElement>(null)\n  const refTextArea = useRef<HTMLTextAreaElement>(null)\n\n  const { handleBlur, handleChange, handleSubmit, touched, values, errors } = handler\n  const { firstName, lastName, email, company, confirmEmail, comments }: ContactFormModel = values\n  const {\n    firstName: firstNameError,\n    lastName: lastNameError,\n    email: emailError,\n    comments: commentsError,\n  } = errors\n  const {\n    firstName: firstNameTouched,\n    lastName: lastNameTouched,\n    email: emailTouched,\n    comments: commentsTouched,\n  } = touched\n\n  useEffect(() => {\n    firstName ? refTextArea.current?.focus() : refNameInput.current?.focus()\n  }, [])\n\n  return (\n    <Fade>\n      <form autoFocus onSubmit={handleSubmit} className={styles['contact-form']}>\n        <div className={styles['contact-form__column']}>\n          <div className={styles['contact-form__group']}>\n            <Field\n              ref={refNameInput}\n              id=\"firstName\"\n              name=\"firstName\"\n              type=\"text\"\n              label=\"First Name*\"\n              placeholder=\"First Name*\"\n              tabIndex={1}\n              maxLength={25}\n              error={!!firstNameTouched && !!firstNameError}\n              msg={firstNameError}\n              value={firstName}\n              onBlur={handleBlur}\n              onChange={handleChange}\n            />\n\n            <Field\n              id=\"lastName\"\n              name=\"lastName\"\n              type=\"text\"\n              label=\"Last Name*\"\n              placeholder=\"Last Name*\"\n              tabIndex={2}\n              maxLength={25}\n              error={!!lastNameTouched && !!lastNameError}\n              msg={lastNameError}\n              value={lastName}\n              onBlur={handleBlur}\n              onChange={handleChange}\n            />\n          </div>\n\n          <Field\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            label=\"Email*\"\n            placeholder=\"Email*\"\n            tabIndex={3}\n            maxLength={40}\n            error={!!emailTouched && !!emailError}\n            msg={emailError}\n            value={email}\n            onBlur={handleBlur}\n            onChange={handleChange}\n          />\n\n          <Field\n            id=\"company\"\n            name=\"company\"\n            type=\"text\"\n            label=\"Company\"\n            placeholder=\"Company\"\n            tabIndex={4}\n            maxLength={25}\n            error={false}\n            msg={''}\n            value={company}\n            onBlur={handleBlur}\n            onChange={handleChange}\n          />\n\n          <div className=\"confirmEmail\">\n            <FieldLabel id={'confirmEmail'} hideLabel={true}>\n              Honeytrap\n            </FieldLabel>\n            <FieldInputTrap name=\"confirmEmail\" type=\"text\" value={confirmEmail} onChange={handleChange} />\n          </div>\n        </div>\n\n        <div className={styles['contact-form__column']}>\n          <FieldTextArea\n            id=\"comments\"\n            name=\"comments\"\n            ref={refTextArea}\n            placeholder=\"Greetings, questions, comments...*\"\n            rows={7}\n            cols={37}\n            tabIndex={5}\n            maxLength={275}\n            value={comments}\n            msg={commentsError}\n            error={!!commentsTouched && !!commentsError}\n            onBlur={handleBlur}\n            onChange={handleChange}\n          />\n        </div>\n\n        <Button\n          buttonType=\"button\"\n          type=\"submit\"\n          tabIndex={6}\n          disabled={isWaiting}\n          isLoading={isWaiting}\n          className={styles['contact-form__btn-submit']}\n          data-testid=\"contact-submit-button\"\n        >\n          Transmit\n        </Button>\n      </form>\n    </Fade>\n  )\n}\n\nexport default ContactForm\n","const SuccessMessage = ({ name = 'Visitor' }: { name: string }) => {\n  return (\n    <>\n      <p className=\"text-slate-500 dark:text-slate-400 mt-2 text-sm\">\n        Hello <strong style={{ color: '#eabb00', fontWeight: 'bold' }}>{name}</strong>,\n      </p>\n      <p className=\"text-slate-500 dark:text-slate-400 mt-2 text-sm leading-5\">\n        This form is wired up to a 🔥 <code>Firebase Firestore</code> NoSQL database on the backend and uses\n        the <strong style={{ color: '#eabb00', fontWeight: 'bold' }}>formik</strong> validation library on the\n        client. Source code is available at my{' '}\n        <strong style={{ color: '#eabb00', fontWeight: 'bold' }}>GitHub</strong> repo.{' '}\n        <a\n          className=\"text-blue-500\"\n          href=\"https://github.com/jasoncsmith/React-Portfolio\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Check it out\n        </a>\n      </p>\n    </>\n  )\n}\n\nexport default SuccessMessage\n","import { RefObject, useEffect } from 'react'\n\n/**\n * React hook\n * intitializes on mount and will start clicklogging, so if not wanted until a condition, will have to add a condition to dep array\n *\n * @param {function} cb fn to call when activated\n * @param {boolean} closeOnEscape dictates whether should close on the esc key being pressed\n * @returns {RefObject}\n */\nexport const useOnOutsideClick = <T extends HTMLElement>(\n  ref: RefObject<T>,\n  cb: () => void,\n  closeOnOutsideClick = true\n) => {\n  useEffect(() => {\n    function closeOnClick(e: MouseEvent) {\n      if (ref.current && !ref.current.contains(e.target as T)) {\n        cb()\n      }\n    }\n\n    if (closeOnOutsideClick) document.addEventListener('click', closeOnClick, true)\n\n    return () => {\n      document.removeEventListener('click', closeOnClick, true)\n    }\n  }, [cb])\n}\n\nexport const useOnKeyCode = <T extends HTMLElement>(ref: RefObject<T>, cb: () => void, buttonCode = '') => {\n  useEffect(() => {\n    function closeOnKeyUp(e: KeyboardEvent) {\n      if (e.code === buttonCode) {\n        cb()\n      }\n    }\n\n    if (buttonCode) document.addEventListener('keyup', closeOnKeyUp, true)\n\n    return () => {\n      document.removeEventListener('keyup', closeOnKeyUp, true)\n    }\n  }, [cb])\n}\n","import { createContext, Dispatch, ReactNode, SetStateAction, useCallback, useContext, useState } from 'react'\n\nexport type ModalId = 'contact' | 'test' | ''\n\ninterface ModalContextProps {\n  close: () => void\n  setModalKey: Dispatch<SetStateAction<ModalId>>\n  modalKey: ModalId\n  setWarn: Dispatch<SetStateAction<boolean>>\n  warn: boolean\n}\n\ninterface ModalProvider {\n  children: ReactNode\n  // if warnBeforeClose is supplied then a Modal.ModalCloseWarning component must be passed as children\n  // otherwise user will be stuck\n  warnBeforeClose?: ModalId[]\n}\n\nexport const ModalContext = createContext<ModalContextProps | null>(null)\n\nexport const useModalContext = () => {\n  const context = useContext(ModalContext)\n\n  if (!context) {\n    throw new Error('cannot use context outside of provider')\n  }\n\n  return context\n}\n\nexport const ModalProvider = ({ children, warnBeforeClose }: ModalProvider) => {\n  const [modalKey, setModalKey] = useState<ModalId>('')\n  const [warn, setWarn] = useState(false)\n\n  const close = useCallback(() => {\n    if (Array.isArray(warnBeforeClose) && warnBeforeClose.includes(modalKey)) {\n      setWarn(true)\n      return\n    }\n\n    setModalKey('')\n  }, [warnBeforeClose?.length, modalKey])\n\n  return (\n    <ModalContext.Provider value={{ modalKey, setModalKey, close, warn, setWarn }}>\n      {children}\n    </ModalContext.Provider>\n  )\n}\n","import React, { ReactNode } from 'react'\n\ninterface InlineProps {\n  children: ReactNode\n  x?: 'start' | 'center' | 'end'\n  y?: 'start' | 'center' | 'end'\n  gap?: string\n}\n\nconst justify = {\n  start: 'justify-start',\n  center: 'justify-center',\n  end: 'justify-center',\n}\n\nconst align = {\n  start: 'items-start',\n  center: 'items-center',\n  end: 'items-center',\n}\n\nconst gaps: Record<string, string> = {\n  xs: 'gap-4',\n  sm: 'gap-8',\n  md: 'gap-12',\n  lg: 'gap-16',\n  xl: 'gap-20',\n}\n\nfunction Inline({ children, x = 'start', y = 'center', gap = 'xs' }: InlineProps) {\n  return <div className={`flex ${justify[x]} ${align[y]} ${gaps[gap]}`}>{children}</div>\n}\n\nexport default Inline\n","// extracted by mini-css-extract-plugin\nexport default {\"modal__warning\":\"ModalWarning_modal__warning__BAVKJ\",\"fadeIn\":\"ModalWarning_fadeIn__jlVzh\"};","import { ReactNode } from 'react'\nimport Button from '../../../Button'\nimport Inline from '../../../Layout/Inline'\nimport styles from './index.module.scss'\nimport { useModalContext } from '../../store'\nimport Fade from '../../../Fade'\n\nexport function DefaultWarnMessage() {\n  return <h5 className=\"text-lg text-white text-center mb-8\">You will lose any unsaved changes. Continue?</h5>\n}\n\nexport function ModalCloseWarning({ children }: { children?: ReactNode }) {\n  const { setModalKey, setWarn, warn } = useModalContext()\n\n  if (!warn) {\n    return null\n  }\n\n  return (\n    <Fade animationTranslate={false}>\n      <div\n        className={`${styles.modal__warning} absolute w-full h-full top-0 left-0 dark:bg-slate-800 rounded-lg p-6 ring-1 ring-slate-700 shadow-xl z-50 text-white`}\n      >\n        {children ? children : <DefaultWarnMessage />}\n        <Inline x=\"center\">\n          <Button buttonType=\"button\" variant=\"primary\" onClick={() => setWarn(false)}>\n            Stay\n          </Button>\n          <Button\n            buttonType=\"button\"\n            variant=\"ghost\"\n            onClick={() => {\n              setWarn(false)\n              setModalKey('')\n            }}\n          >\n            Leave\n          </Button>\n        </Inline>\n      </div>\n    </Fade>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal__btn-close\":\"ModalContent_modal__btn-close__0JmB5\"};","import { Dispatch, ReactNode, SetStateAction, useEffect, useRef } from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { useOnKeyCode, useOnOutsideClick } from '../../hooks/useOnOutsideClick'\nimport { ModalId, ModalProvider, useModalContext } from './store'\n\nimport { ModalCloseWarning } from './components/ModalWarning'\nimport { ModalOpener, ModalCloser, ModalTitle, ModalContent } from './components/ModalContent'\nimport Fade from '../Fade'\n\nconst defaults = {\n  closeOnEscape: true,\n  closeOnOutsideClick: true,\n  externalOpener: false,\n  warnBeforeClose: [],\n}\ninterface ModalProps {\n  children: ReactNode\n  // if warnBeforeClose is supplied then a Modal.ModalCloseWarning component must be passed as children otherwise user will be stuck\n  warnBeforeClose?: ModalId[]\n}\n\ninterface ModalWindowProps {\n  modalId: ModalId\n  children: ReactNode[] | ReactNode\n  // defines if modal needs to be opened externally without the internal Modal.Opener component\n  externalOpen?: boolean\n  // allows resetting the useState prop so it can be triggered again\n  externalReset?: Dispatch<SetStateAction<boolean>>\n  closeOnEsc?: boolean\n  closeOnOutsideClick?: boolean\n}\n\ninterface ModalBodyProps {\n  children: ReactNode\n  closeOnEsc: boolean\n  closeOnOutsideClick: boolean\n}\n\nfunction Modal({ children, warnBeforeClose = defaults.warnBeforeClose }: ModalProps) {\n  return <ModalProvider warnBeforeClose={warnBeforeClose}>{children}</ModalProvider>\n}\n\nfunction Overlay({ children }: { children: ReactNode }) {\n  return (\n    <div className=\"modal-overlay fixed top-0 left-0 bg-black/70 w-full h-full z-30\" role=\"presentation\">\n      {children}\n    </div>\n  )\n}\n\nfunction ModalWindow({\n  modalId,\n  closeOnEsc = defaults.closeOnEscape,\n  closeOnOutsideClick = defaults.closeOnOutsideClick,\n  externalOpen = defaults.externalOpener,\n  externalReset,\n  children,\n}: ModalWindowProps) {\n  const { modalKey, setModalKey } = useModalContext()\n\n  useEffect(() => {\n    externalOpen && setModalKey(modalId)\n  }, [externalOpen])\n\n  useEffect(() => {\n    // once modal is closed, reset external opener so it can be trigger again\n    !modalKey && externalReset?.(false)\n  }, [modalKey])\n\n  if (modalKey !== modalId) {\n    return null\n  }\n\n  return createPortal(\n    <Overlay>\n      <Fade animationTranslate={false}>\n        <ModalBody closeOnEsc={closeOnEsc} closeOnOutsideClick={closeOnOutsideClick}>\n          {children}\n        </ModalBody>\n      </Fade>\n    </Overlay>,\n    document.body\n  )\n}\n\nfunction ModalBody({ children, closeOnEsc, closeOnOutsideClick }: ModalBodyProps) {\n  const { close } = useModalContext()\n  const ref = useRef(null)\n\n  useOnOutsideClick<HTMLDivElement>(ref, close, closeOnOutsideClick)\n  useOnKeyCode<HTMLDivElement>(ref, close, closeOnEsc ? 'Escape' : '')\n\n  return (\n    <div\n      role=\"dialog\"\n      ref={ref}\n      className=\"absolute w-11/12 md:w-1/2 top-1/3 left-1/2 transform -translate-x-1/2 -translate-y-1/2 dark:bg-slate-800 rounded-lg p-6 ring-1 ring-slate-700 shadow-xl z-50\"\n    >\n      {children}\n    </div>\n  )\n}\n\nModal.ModalWindow = ModalWindow\nModal.ModalOpener = ModalOpener\nModal.ModalCloser = ModalCloser\nModal.ModalTitle = ModalTitle\nModal.ModalContent = ModalContent\nModal.ModalCloseWarning = ModalCloseWarning\n\nexport default Modal\n","import { ReactNode } from 'react'\n\nimport Button from '../../../Button'\nimport { ModalId, useModalContext } from '../../store'\n\nimport styles from './index.module.scss'\n\nexport function ModalCloser() {\n  const { close } = useModalContext()\n\n  return (\n    <Button\n      onClick={close}\n      buttonType=\"button\"\n      className={`${styles['modal__btn-close']} stroke-white hover:bg-slate-600 absolute top-3 right-3 rounded-md text-amber-400 p-0`}\n      iconName=\"IoMdClose\"\n      variant=\"ghost\"\n    />\n  )\n}\n\nexport function ModalOpener({ children, modalId }: { children: string; modalId: ModalId }) {\n  const { setModalKey } = useModalContext()\n\n  return (\n    <Button buttonType=\"button\" onClick={() => setModalKey(modalId)}>\n      {children}\n    </Button>\n  )\n}\n\nexport function ModalTitle({ children }: { children: string | ReactNode }) {\n  return <div className=\"text-slate-900 dark:text-white mb-5 text-base font-medium\">{children}</div>\n}\n\nexport function ModalContent({ children }: { children: string | ReactNode }) {\n  return <div className=\"text-slate-500 dark:text-slate-400 mt-2 text-sm leading-5\">{children}</div>\n}\n","import { toast, ToastOptions } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst DEFAULT_OPTIONS: ToastOptions = {\n  position: 'top-right',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  theme: 'dark',\n}\n\nconst success = (message: string) => toast.success(message, DEFAULT_OPTIONS)\nconst error = (message: string) => toast.error(message, DEFAULT_OPTIONS)\nconst warning = (message: string) => toast.warning(message, DEFAULT_OPTIONS)\nconst info = (message: string) => toast(message, DEFAULT_OPTIONS)\n\nconst exp = {\n  success,\n  error,\n  warning,\n  info,\n}\n\nexport default exp\n","import { useState } from 'react'\nimport { useFormik } from 'formik'\nimport { pick, omit } from 'lodash'\n\nimport { createUser } from '../../api/user'\nimport { validateForm } from '../ContactForm/helpers'\nimport { capitalizeFirstLetter } from '../../utilities/strings'\nimport useLocalStorage from '../../hooks/useLocalStorage'\nimport { sanitize } from '../../utilities/sanitize'\n\nimport ContactForm from '../ContactForm'\nimport SuccessMessage from '../ContactForm/components/SuccessMessage'\nimport Modal from '../Modal'\nimport toasts from '../Toast'\n\nexport interface User {\n  id: number\n  firstName: string\n  lastName: string\n  fullName: string\n  email: string\n  company?: string\n}\n\nexport interface ContactFormModel extends Omit<User, 'id' | 'fullName'> {\n  comments: string\n  confirmEmail?: string\n}\n\nconst initialData: ContactFormModel = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  company: '',\n  comments: '',\n}\n\nconst ContactFormController = () => {\n  const [isNewUser, setIsNewUser] = useState(false)\n  const [isWaiting, setIsWaiting] = useState(false)\n  const [openModal, setOpenModal] = useState(false)\n  const [user, setUser] = useLocalStorage<User | null>('user')\n  const formik = useFormik({\n    initialValues: { ...initialData, ...pick(user, 'firstName', 'lastName', 'email', 'company') },\n    validate: validateForm,\n    onSubmit: send,\n    enableReinitialize: true, // will fill in latest vals after reset\n  })\n\n  function handleSuccess(status: number, data: User) {\n    if (status === 200 || status === 201) {\n      setUser(data)\n      setIsNewUser(status === 201)\n      setOpenModal(true)\n    } else if (status === 202) {\n      // spambot\n      toasts.success('Thank you for your comments')\n    }\n  }\n\n  async function send(model: ContactFormModel): Promise<void> {\n    setIsWaiting(true)\n\n    try {\n      const payload = Object.fromEntries(\n        Object.entries(model).map(([k, v]: Array<keyof ContactFormModel>) => [k, sanitize(v)])\n      ) as {\n        [K in keyof ContactFormModel]: string\n      }\n\n      const { data, status } = await createUser(payload)\n      handleSuccess(status, omit(data))\n      formik.handleReset(null)\n    } catch (error: unknown) {\n      toasts.error('Sorry, there was an error submitting this form.')\n    } finally {\n      setIsWaiting(false)\n    }\n  }\n\n  return (\n    <>\n      {!openModal && <ContactForm handler={formik} isWaiting={isWaiting} />}\n\n      <Modal>\n        <Modal.ModalWindow modalId=\"contact\" externalOpen={openModal} externalReset={setOpenModal}>\n          <Modal.ModalTitle>{isNewUser ? 'Thanks for Visiting!' : 'Welcome Back!'}</Modal.ModalTitle>\n          <Modal.ModalContent>\n            <SuccessMessage name={user ? capitalizeFirstLetter(user.fullName) : ''} />\n          </Modal.ModalContent>\n          <Modal.ModalCloser />\n        </Modal.ModalWindow>\n      </Modal>\n    </>\n  )\n}\n\nexport default ContactFormController\n","export const capitalizeFirstLetter = (str: string) =>\n  str.length > 0 ? [str[0].toUpperCase(), ...str.split('').slice(1)].join('') : str\n","import ContactFormController from '../../components/ContactFormController'\n\nimport './index.scss'\n\nexport default function Contact(): JSX.Element {\n  return (\n    <div id=\"view-contact\" className=\"view view-contact\">\n      <header className=\"view__header\">\n        <h2>Contact Me</h2>\n      </header>\n\n      <section>\n        <ContactFormController />\n      </section>\n    </div>\n  )\n}\n"],"names":["axios","baseURL","_ref","children","className","buttonType","variant","isLoading","iconName","props","Component","_jsxs","classNames","styles","concat","_jsx","Loader","Icon","animationToggle","animationTranslate","ref","useRef","isVisible","setIsVisible","useState","useEffect","currentRef","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","unobserve","IconSet","Bs","io5","io","fa","IconName","role","LuLoader2","key","initialState","arguments","length","undefined","data","setData","item","window","localStorage","getItem","JSON","parse","error","getStorageItem","setStorageItem","setItem","stringify","validateForm","values","errors","firstName","lastName","email","test","validateEmail","comments","sanitize","str","map","replace","val","id","hideLabel","htmlFor","FieldInput","forwardRef","name","type","valid","Field","msg","label","generatedID","FieldLabel","FieldMessage","FieldTextArea","generatedId","handler","isWaiting","refNameInput","refTextArea","handleBlur","handleChange","handleSubmit","touched","company","confirmEmail","firstNameError","lastNameError","emailError","commentsError","firstNameTouched","lastNameTouched","emailTouched","commentsTouched","_refTextArea$current","_refNameInput$current","focus","Fade","autoFocus","onSubmit","placeholder","tabIndex","maxLength","value","onBlur","onChange","FieldInputTrap","rows","cols","Button","disabled","_Fragment","style","color","fontWeight","href","target","rel","useOnOutsideClick","cb","closeOnOutsideClick","closeOnClick","e","contains","document","addEventListener","removeEventListener","useOnKeyCode","buttonCode","closeOnKeyUp","code","ModalContext","createContext","useModalContext","context","useContext","Error","ModalProvider","warnBeforeClose","modalKey","setModalKey","warn","setWarn","close","useCallback","Array","isArray","includes","Provider","justify","start","center","end","align","gaps","xs","sm","md","lg","xl","x","y","gap","DefaultWarnMessage","defaults","closeOnEscape","externalOpener","Modal","Overlay","_ref2","ModalBody","_ref4","closeOnEsc","ModalWindow","_ref3","modalId","externalOpen","externalReset","createPortal","body","ModalOpener","onClick","ModalCloser","ModalTitle","ModalContent","ModalCloseWarning","Inline","DEFAULT_OPTIONS","position","autoClose","hideProgressBar","pauseOnHover","theme","success","message","toast","warning","info","initialData","ContactFormController","isNewUser","setIsNewUser","setIsWaiting","openModal","setOpenModal","user","setUser","useLocalStorage","formik","useFormik","initialValues","pick","validate","async","model","payload","Object","fromEntries","k","v","status","client","createUser","toasts","handleSuccess","omit","handleReset","enableReinitialize","ContactForm","SuccessMessage","fullName","toUpperCase","split","slice","join","Contact"],"sourceRoot":""}