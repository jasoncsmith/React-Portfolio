{"version":3,"file":"static/js/721.baea015d.chunk.js","mappings":"8HAGA,MAIA,E,QAFeA,EAAAA,OAAa,CAAEC,QAFd,uC,qFCFhB,QAAyB,uBAAzB,EAA+D,6BAA/D,EAA6G,+BAA7G,EAAiK,mC,aC4BjK,MAyBA,EAzBeC,IAOoC,IAPnC,SACdC,EAAW,GAAE,UACbC,EAAY,GAAE,WACdC,EAAa,SAAQ,UACrBC,GAAY,EAAK,SACjBC,KACGC,GACwCN,EAC3C,MAAMO,EAA2B,SAAfJ,EAAwB,IAAM,SAChD,OACEK,EAAAA,EAAAA,MAACD,EAAS,CACRL,UAAWO,IAAW,CACpB,CAACC,IAAgB,EACjB,CAACA,GAA+BN,EAChC,CAACF,KAAcA,OAEbI,EAAKL,SAAA,CAERG,IAAaO,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACV,UAAWQ,MAC9BL,IAAYM,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAACR,SAAUA,KAC/BM,EAAAA,EAAAA,KAAA,QAAMT,UAAWQ,EAAoBT,SAAEA,MAC7B,C,mECjDhB,QAAuB,mBAAvB,EAA4D,8BAA5D,EAAgH,kC,aCShH,MAqCA,EArCaD,IAAkF,IAAjF,SAAEC,EAAQ,gBAAEa,GAAkB,EAAK,mBAAEC,GAAqB,GAAiBf,EACvF,MAAMgB,GAAMC,EAAAA,EAAAA,QAAO,OACZC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAqB3C,OAnBAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgB,OAAHN,QAAG,IAAHA,OAAG,EAAHA,EAAKO,QACxB,IAAKD,EAAY,OAEjB,MAAME,EAAW,IAAIC,sBAAqBC,IACxCA,EAAQC,SAAQC,KACU,IAApBd,EACFK,EAAaS,EAAMC,gBAEnBD,EAAMC,gBAAkBV,GAAa,EACvC,GACA,IAKJ,OAFAK,EAASM,QAAQR,GAEV,IAAME,EAASO,UAAUT,EAAW,KAI3CX,EAAAA,EAAAA,KAAA,OACEK,IAAKA,EACLd,UAAWO,IAAW,CACpB,CAACC,IAAc,EACf,CAACA,IAA6BQ,EAC9B,CAACR,GAAgCK,IAChCd,SAEFA,GACG,C,6FCnCV,MAAM+B,EAAU,IAAKC,KAAOC,KAAQC,KAAOC,GAY3C,EALkCpC,IAAwD,IAAvD,SAAEK,EAAQ,UAAEH,EAAY,MAAOI,GAAkBN,EAClF,MAAMqC,EAAWL,EAAQ3B,GACzB,OAAOgC,GAAW1B,EAAAA,EAAAA,KAAC0B,EAAQ,CAACnC,UAAWA,KAAeI,IAAY,IAAI,C,+CCjBjE,MCaP,EAVwB,SAAIgC,GAAkF,IAArEC,EAAsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAChE,MAAOG,EAAMC,IAAWxB,EAAAA,EAAAA,WAAY,IDJPkB,KAC7B,IACE,MAAMO,EAAOC,OAAOC,aAAaC,QAAQV,GACzC,OAAOO,GAAQI,KAAKC,MAAML,EAC5B,CAAE,MAAOM,GACP,OAAO,IACT,GCF0CC,CAAed,IAAQC,IAMjE,OAJAlB,EAAAA,EAAAA,YAAU,KDGkBgC,EAACf,EAAaK,KAC1C,IACEG,OAAOC,aAAaO,QAAQhB,EAAKW,KAAKM,UAAUZ,GAClD,CAAE,MAAOQ,GACP,MACF,GCPEE,CAAef,EAAKK,EAAK,GACxB,CAACA,IAEG,CAACA,EAAMC,EAChB,C,0ICFO,MCGMY,EAAgBC,IAC3B,MAAMC,EAAS,CAAC,EA0BhB,OAxBID,EAAOE,UAAUlB,OAAS,EAC5BiB,EAAOC,UAAY,WACVF,EAAOE,UAAUlB,OAAS,KACnCiB,EAAOC,UAAY,iCAGjBF,EAAOG,SAASnB,OAAS,EAC3BiB,EAAOE,SAAW,WACTH,EAAOG,SAASnB,OAAS,KAClCiB,EAAOE,SAAW,iCAGfH,EAAOI,MAlBQ7D,KAAA,IAAC,MAAE6D,GAA0B7D,EAAA,OAChD,4CAA4C8D,KAAKD,EAAM,EAmB7CE,CAAcN,KACvBC,EAAOG,MAAQ,sCAFfH,EAAOG,MAAQ,WAKZJ,EAAOO,SAEDP,EAAOO,SAASvB,OAAS,IAClCiB,EAAOM,SAAW,sCAFlBN,EAAOM,SAAW,WAKbN,CAAM,E,iCC0Bf,QApDA,SAAc1D,GAAkF,IAAjF,UAAEkB,EAAS,UAAE+C,EAAS,MAAEC,EAAK,QAAEC,GAAqBnE,EACjE,MAAMoE,GAAcnD,EAAAA,EAAAA,QAAiC,MAwBrD,OAtBAI,EAAAA,EAAAA,YAAU,KACR,SAASgD,EAAUC,GACjB,MAAMhC,EAAcgC,EAAEhC,IAEV,WAARA,EAEF2B,IACiB,QAAR3B,GAAyB,UAARA,GAE1B8B,EAAY7C,SAAW6C,EAAY7C,QAAQgD,OAE/C,CAQA,OANIrD,EACFsD,SAASC,iBAAiB,QAASJ,GAEnCG,SAASE,oBAAoB,QAASL,GAGjC,IAAMG,SAASE,oBAAoB,QAASL,EAAU,GAC5D,CAACnD,EAAW+C,IAER/C,GACHyD,EAAAA,EAAAA,eACEnE,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAA3E,SAAA,EACEU,EAAAA,EAAAA,KAAA,OAAKT,UAAU,6EACfS,EAAAA,EAAAA,KAAA,OAAKT,UAAU,qFAAoFD,UACjGO,EAAAA,EAAAA,MAAA,OAAKN,UAAU,qKAAoKD,SAAA,CAChLiE,IACCvD,EAAAA,EAAAA,KAAA,MAAIT,UAAU,4DAA2DD,SAAEiE,KAE7EvD,EAAAA,EAAAA,KAAA,OAAKT,UAAU,4DAA2DD,SAAEkE,KAE5ExD,EAAAA,EAAAA,KAAA,UACET,UAAU,wEACV2E,KAAK,SACL7D,IAAKoD,EACLU,QAASb,EAAUhE,UAEnBU,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAACR,SAAS,YAAY0E,MAAM,UAAUC,KAAK,mBAKxDR,SAASS,MAEX,IACN,ECzCA,QAZA,WACE,MAAO/D,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAI3C,MAAO,CACLF,YACAgE,gBAJsBA,IAAM/D,GAAcD,GAK1CiE,MACF,EACF,E,gCCnBA,SAAgB,MAAQ,0BAA0B,mBAAmB,sCC0BrE,QAfA,SAAmBnF,GAAsE,IAArE,GAAEoF,EAAE,MAAEjC,GAAQ,EAAK,UAAEkC,GAAY,EAAI,SAAEpF,GAA2BD,EACpF,OACEW,EAAAA,EAAAA,KAAA,SACET,UAAWO,IAAW,CACpB,CAACC,EAAAA,QAAe,EAChB,CAACA,EAAAA,sBAA8ByC,EAC/B,CAACzC,EAAAA,qBAA6B2E,IAEhCC,QAASF,EAAGnF,SAEXA,GAGP,ECxBA,GAAgB,cAAc,gCAAgC,qBAAqB,uCAAuC,oBAAoB,sCAAsC,0BAA0B,6CCcxMsF,GAAaC,EAAAA,EAAAA,aAA8C,SAAmBxF,EAElFgB,GACC,IAFD,GAAEoE,EAAE,KAAEK,EAAI,KAAEZ,EAAO,OAAM,MAAE1B,EAAK,MAAEuC,KAAUpF,GAAwBN,EAGpE,OACEW,EAAAA,EAAAA,KAAA,SACEyE,GAAIA,EACJpE,IAAKA,EACLyE,KAAMA,EACNZ,KAAMA,EACN3E,UAAWO,IAAW,CACpB,CAACC,EAAAA,iBAAwB,EACzB,CAACA,EAAAA,4BAAoCyC,EACrC,CAACzC,EAAAA,0BAAkCgF,OAEjCpF,GAGV,IAEA,IClCA,EAAqC,yCAArC,EAA+G,qDAA/G,EAAmM,mDCsBnM,EAbqBN,IAAA,IAAC,MAAEmD,EAAK,SAAElD,GAA6BD,EAAA,OAC1DmD,GACExC,EAAAA,EAAAA,KAAA,QACET,UAAWO,IAAW,CACpB,CAACC,IAA+B,EAChC,CAACA,GAA2CyC,EAC5C,CAACzC,IAAyC,IACzCT,SAEFA,IAED,IAAI,ECpBV,EAAwB,qBCoBlB0F,GAAQH,EAAAA,EAAAA,aAAW,SAAcxF,EAErCgB,GACC,IAFD,GAAEoE,EAAE,KAAEK,EAAI,MAAEtC,EAAK,IAAEyC,EAAG,MAAEC,EAAK,UAAER,GAAY,EAAI,KAAER,EAAO,UAAWvE,GAAmBN,EAKtF,MAAM8F,EAAW,SAAAC,OAAYlB,EAAI,KAAAkB,OAAIX,GAErC,OACE5E,EAAAA,EAAAA,MAAA,OAAKN,UAAWQ,EAAaT,SAAA,CAC1B4F,IACClF,EAAAA,EAAAA,KAACqF,EAAU,CAACZ,GAAIU,EAAa3C,MAAOA,EAAOkC,UAAWA,EAAUpF,SAC7D4F,KAGLlF,EAAAA,EAAAA,KAAC4E,EAAU,CAACvE,IAAKA,EAAKoE,GAAIU,EAAaL,KAAMA,EAAMZ,KAAMA,EAAM1B,MAAOA,KAAW7C,IAChFsF,IAAOjF,EAAAA,EAAAA,KAACsF,EAAY,CAAC9C,MAAOA,EAAMlD,SAAE2F,MAG3C,IAEA,ICzCA,EAA+B,qCCQ/B,EAJwBtF,IACtBK,EAAAA,EAAAA,KAAA,SAAOT,UAAWQ,EAAqBmE,KAAK,UAAWvE,ICLzD,GAAgB,mBAAmB,wCAAwC,SAAW,gCAAgC,uBAAuB,6CCmBvI4F,GAAgBV,EAAAA,EAAAA,aAAW,SAAsBxF,EAErDgB,GACC,IAFD,GAAEoE,EAAE,KAAEK,EAAI,IAAEG,EAAG,MAAEC,EAAK,UAAER,GAAY,EAAK,MAAElC,EAAK,MAAEuC,KAAUpF,GAA2BN,EAGvF,MAAMmG,EAAW,oBAAAJ,OAAuBX,GAExC,OACE5E,EAAAA,EAAAA,MAAA,OAAKN,UAAWQ,EAAAA,oBAA2BT,SAAA,CACxC4F,IACClF,EAAAA,EAAAA,KAACqF,EAAU,CAACZ,GAAIe,EAAad,UAAWA,EAAUpF,SAC/C4F,KAILlF,EAAAA,EAAAA,KAAA,YACEK,IAAKA,EACLoE,GAAIe,EACJV,KAAMA,EACNvF,UAAWO,IAAW,CACpB,CAACC,EAAAA,WAAkB,EACnB,CAACA,EAAAA,yBAAiCyC,EAClC,CAACzC,EAAAA,uBAA+BgF,OAE9BpF,IAGLsF,IAAOjF,EAAAA,EAAAA,KAACsF,EAAY,CAAC9C,MAAOA,EAAMlD,SAAE2F,MAG3C,IAEA,I,gCChDA,MAAMQ,EAAgC,CACpCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,MAAO,QAeT,EAPY,CACVC,QANeC,GAAoBC,EAAAA,GAAAA,QAAcD,EAASR,GAO1DjD,MANayD,GAAoBC,EAAAA,GAAAA,MAAYD,EAASR,GAOtDU,QANeF,GAAoBC,EAAAA,GAAAA,QAAcD,EAASR,GAO1DW,KANYH,IAAoBC,EAAAA,EAAAA,IAAMD,EAASR,I,cCfjD,MAwBA,EAxBuBpG,IAA6C,IAA5C,KAAEyF,EAAO,WAA6BzF,EAC5D,OACEQ,EAAAA,EAAAA,MAAAoE,EAAAA,SAAA,CAAA3E,SAAA,EACEO,EAAAA,EAAAA,MAAA,KAAGN,UAAU,kDAAiDD,SAAA,CAAC,UACvDU,EAAAA,EAAAA,KAAA,UAAQqG,MAAO,CAAEjC,MAAO,UAAWkC,WAAY,QAAShH,SAAEwF,IAAe,QAEjFjF,EAAAA,EAAAA,MAAA,KAAGN,UAAU,4DAA2DD,SAAA,CAAC,4CACzCU,EAAAA,EAAAA,KAAA,QAAAV,SAAM,uBAAyB,gDACzDU,EAAAA,EAAAA,KAAA,UAAQqG,MAAO,CAAEjC,MAAO,UAAWkC,WAAY,QAAShH,SAAC,WAAe,oEACrC,KACvCU,EAAAA,EAAAA,KAAA,UAAQqG,MAAO,CAAEjC,MAAO,UAAWkC,WAAY,QAAShH,SAAC,WAAe,SAAO,KAC/EU,EAAAA,EAAAA,KAAA,KACET,UAAU,gBACVgH,KAAK,iDACLC,OAAO,SACPC,IAAI,aAAYnH,SACjB,sBAIF,ECnBP,EAA+B,kCAA/B,EAAuI,0CAAvI,EAAuM,yCAAvM,EAA8S,8CC6CxSoH,EAAgC,CACpC1D,UAAW,GACXC,SAAU,GACVC,MAAO,GACPyD,QAAS,GACTtD,SAAU,IA2KZ,EAxKoBuD,KAClB,MAAMvG,GAAMC,EAAAA,EAAAA,QAAyB,MAC/BuG,GAAcvG,EAAAA,EAAAA,QAA4B,OACzCwG,EAAWC,IAAgBtG,EAAAA,EAAAA,WAAS,IACpCwE,EAAK+B,IAAcvG,EAAAA,EAAAA,UAAuB,CAC/C8C,MAAO,GACPC,SAASxD,EAAAA,EAAAA,KAAAiE,EAAAA,SAAA,MAGLgD,EAAQC,KACPC,EAAMC,IAAWC,EAAAA,EAAAA,GAA6B,QAC/CC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,IAAKd,KAAgBe,IAAKN,EAAM,YAAa,WAAY,QAAS,YACjFO,SAAU7E,EACV8E,SAAU7E,GAAU8E,EAAK9E,GACzB+E,oBAAoB,IAiBtB,MAAMD,EAAOE,UACXf,GAAa,GACb,IACE,MAAM,KAAE/E,EAAI,OAAE+F,QnBhFO/F,IACzBgG,EAAAA,EAAAA,KAAY,eAAgBhG,GmB+EOiG,CAAWC,IAjB9C,SAAuBH,EAAgB/F,GAhDVmG,MAiDZ,MAAXJ,GAA6B,MAAXA,GACpBf,EAAW,CACTzD,MAAkB,MAAXwE,EAAiB,uBAAyB,gBACjDvE,SAASxD,EAAAA,EAAAA,KAACoI,EAAc,CAACtD,MApDFqD,EAoD8BnG,EAAKqG,SAnDhEF,EAAIrG,OAAS,EAAI,CAACqG,EAAI,GAAGG,iBAAkBH,EAAII,MAAM,IAAIC,MAAM,IAAIC,KAAK,IAAMN,OAqD1ElB,EAAM1C,kBACN6C,EAAQsB,IAAKC,IAAO3G,GAAO,YACP,MAAX+F,GAETa,EAAAA,QAAe,8BAEnB,CAMIC,CAAcd,EAAQ/F,GACtBsF,EAAOwB,YAAY,KACrB,CAAE,MAAOtG,GACPoG,EAAAA,MAAa,kDACf,CAAC,QACC7B,GAAa,EACf,GAOF,OAJArG,EAAAA,EAAAA,YAAU,KAAO,IAADqI,EAAAC,EACd7B,EAA0B,QAAtB4B,EAAGlC,EAAYjG,eAAO,IAAAmI,GAAnBA,EAAqBnF,QAAqB,QAAdoF,EAAG3I,EAAIO,eAAO,IAAAoI,GAAXA,EAAapF,OAAO,GACzD,KAGD/D,EAAAA,EAAAA,MAACoJ,EAAAA,EAAI,CAAA3J,SAAA,EACHO,EAAAA,EAAAA,MAAA,QAAMqJ,WAAS,EAACvB,SAAUL,EAAO6B,aAAc5J,UAAWQ,EAAuBT,SAAA,EAC/EO,EAAAA,EAAAA,MAAA,OAAKN,UAAWQ,EAA+BT,SAAA,EAC7CO,EAAAA,EAAAA,MAAA,OAAKN,UAAWQ,EAA8BT,SAAA,EAC5CU,EAAAA,EAAAA,KAACgF,EAAK,CACJ3E,IAAKA,EACLoE,GAAG,YACHK,KAAK,YACLZ,KAAK,OACLgB,MAAM,cACNkE,YAAY,cACZC,SAAU,EACVC,UAAW,GACX9G,QAAS8E,EAAOiC,QAAQvG,aAAesE,EAAOvE,OAAOC,UACrDiC,IAAKqC,EAAOvE,OAAOC,UACnBwG,MAAOlC,EAAOxE,OAAOE,UACrByG,OAAQnC,EAAOoC,WACfC,SAAUrC,EAAOsC,gBAGnB5J,EAAAA,EAAAA,KAACgF,EAAK,CACJP,GAAG,WACHK,KAAK,WACLZ,KAAK,OACLgB,MAAM,aACNkE,YAAY,aACZC,SAAU,EACVC,UAAW,GACX9G,QAAS8E,EAAOiC,QAAQtG,YAAcqE,EAAOvE,OAAOE,SACpDgC,IAAKqC,EAAOvE,OAAOE,SACnBuG,MAAOlC,EAAOxE,OAAOG,SACrBwG,OAAQnC,EAAOoC,WACfC,SAAUrC,EAAOsC,mBAIrB5J,EAAAA,EAAAA,KAACgF,EAAK,CACJP,GAAG,QACHK,KAAK,QACLZ,KAAK,QACLgB,MAAM,SACNkE,YAAY,SACZC,SAAU,EACVC,UAAW,GACX9G,QAAS8E,EAAOiC,QAAQrG,SAAWoE,EAAOvE,OAAOG,MACjD+B,IAAKqC,EAAOvE,OAAOG,MACnBsG,MAAOlC,EAAOxE,OAAOI,MACrBuG,OAAQnC,EAAOoC,WACfC,SAAUrC,EAAOsC,gBAGnB5J,EAAAA,EAAAA,KAACgF,EAAK,CACJP,GAAG,UACHK,KAAK,UACLZ,KAAK,OACLgB,MAAM,UACNkE,YAAY,UACZC,SAAU,EACVC,UAAW,GACX9G,OAAO,EACPyC,IAAK,GACLuE,MAAOlC,EAAOxE,OAAO6D,QACrB8C,OAAQnC,EAAOoC,WACfC,SAAUrC,EAAOsC,gBAGnB/J,EAAAA,EAAAA,MAAA,OAAKN,UAAU,eAAcD,SAAA,EAC3BU,EAAAA,EAAAA,KAACqF,EAAU,CAACZ,GAAI,eAAgBC,WAAW,EAAKpF,SAAC,eAGjDU,EAAAA,EAAAA,KAAC6J,EAAc,CACb/E,KAAK,eACLZ,KAAK,OACLsF,MAAOlC,EAAOxE,OAAOgH,aACrBH,SAAUrC,EAAOsC,sBAKvB5J,EAAAA,EAAAA,KAAA,OAAKT,UAAWQ,EAA+BT,UAC7CU,EAAAA,EAAAA,KAACuF,EAAa,CACZd,GAAG,WACHK,KAAK,WACLzE,IAAKwG,EACLuC,YAAY,qCACZW,KAAM,EACNC,KAAM,GACNX,SAAU,EACVC,UAAW,IACXE,MAAOlC,EAAOxE,OAAOO,SACrB4B,IAAKqC,EAAOvE,OAAOM,SACnBb,QAAS8E,EAAOiC,QAAQlG,YAAciE,EAAOvE,OAAOM,SACpDoG,OAAQnC,EAAOoC,WACfC,SAAUrC,EAAOsC,kBAIrB5J,EAAAA,EAAAA,KAACiK,EAAAA,EAAM,CACLzK,WAAW,SACX0E,KAAK,SACLmF,SAAU,EACV5J,UAAWqH,EACXvH,UAAWQ,EAAmCT,SAC/C,iBAKHU,EAAAA,EAAAA,KAACiH,EAAMzC,MAAK,CACVjE,UAAW0G,EAAM1G,UACjB+C,UAAW2D,EAAM1C,gBACjBf,QAASyB,EAAIzB,QACbD,MAAO0B,EAAI1B,UAER,ECtNI,SAAS2G,IACtB,OACErK,EAAAA,EAAAA,MAAA,OAAK4E,GAAG,eAAelF,UAAU,oBAAmBD,SAAA,EAClDU,EAAAA,EAAAA,KAAA,UAAQT,UAAU,eAAcD,UAC9BU,EAAAA,EAAAA,KAAA,MAAAV,SAAI,kBAGNU,EAAAA,EAAAA,KAAA,WAAAV,UACEU,EAAAA,EAAAA,KAAC4G,EAAW,QAIpB,C","sources":["api/index.ts","webpack://jfolio-client/./src/components/Button/index.module.scss?7cda","components/Button/index.tsx","webpack://jfolio-client/./src/components/Fade/index.module.scss?3c79","components/Fade/index.tsx","components/Icon/index.tsx","utilities/storage.ts","hooks/useLocalStorage.ts","api/user.ts","components/ContactForm/helpers.tsx","components/Modal/index.tsx","hooks/useModal.ts","webpack://jfolio-client/./src/components/FieldLabel/index.module.scss?6830","components/FieldLabel/index.tsx","webpack://jfolio-client/./src/components/FieldInput/index.module.scss?ae65","components/FieldInput/index.tsx","webpack://jfolio-client/./src/components/FieldMessage/index.module.scss?8960","components/FieldMessage/index.tsx","webpack://jfolio-client/./src/components/Field/index.module.scss?9174","components/Field/index.tsx","webpack://jfolio-client/./src/components/FieldInputTrap/index.module.scss?31ef","components/FieldInputTrap/index.tsx","webpack://jfolio-client/./src/components/FieldTextArea/index.module.scss?145b","components/FieldTextArea/index.tsx","components/Toast/index.ts","components/ContactForm/components/SuccessMessage/index.tsx","webpack://jfolio-client/./src/components/ContactForm/index.module.scss?2889","components/ContactForm/index.tsx","views/Contact/index.tsx"],"sourcesContent":["import axios from 'axios'\n// const baseURL = process.env.REACT_APP_API_ENDPOINT\n// TODO: setup secrets on github\nconst baseURL = 'https://api-gaxpa6b7ta-uc.a.run.app'\n\nconst client = axios.create({ baseURL })\n\nexport default client\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__85C4R\",\"button__text\":\"Button_button__text__SkwgW\",\"button__loader\":\"Button_button__loader__w7pH0\",\"button--is-loading\":\"Button_button--is-loading__4WX7w\"};","import React, { HTMLAttributes } from 'react'\nimport classNames from 'classnames'\nimport Loader from '../Loader'\nimport Icon, { IconProps } from '../Icon'\nimport styles from './index.module.scss'\n\ntype LinkProps = {\n  buttonType: 'link'\n  href: string\n  target?: '_blank'\n  isLoading?: never\n  disabled?: never\n}\n\ntype ButtonProps = {\n  buttonType: 'button'\n  type: 'button' | 'submit'\n  isLoading?: boolean\n  disabled?: boolean\n}\n\ninterface ComponentProps extends HTMLAttributes<HTMLButtonElement | HTMLAnchorElement> {\n  children: string\n  iconName?: IconProps['iconName']\n  className?: string\n  isLoading?: boolean\n  disabled?: boolean\n}\n\nconst Button = ({\n  children = '',\n  className = '',\n  buttonType = 'button',\n  isLoading = false,\n  iconName,\n  ...props\n}: ComponentProps & (ButtonProps | LinkProps)) => {\n  const Component = buttonType === 'link' ? 'a' : 'button'\n  return (\n    <Component\n      className={classNames({\n        [styles.button]: true,\n        [styles['button--is-loading']]: isLoading,\n        [className]: !!className,\n      })}\n      {...props}\n    >\n      {isLoading && <Loader className={styles.button__loader} />}\n      {!!iconName && <Icon iconName={iconName} />}\n      <span className={styles.button__text}>{children}</span>\n    </Component>\n  )\n}\n\nexport default Button\n","// extracted by mini-css-extract-plugin\nexport default {\"base\":\"Fade_base__rYYws\",\"base--is-hidden\":\"Fade_base--is-hidden__DCRQT\",\"base--has-translate\":\"Fade_base--has-translate__msRZr\"};","import React, { useEffect, useRef, useState } from 'react'\nimport classNames from 'classnames'\nimport styles from './index.module.scss'\n\ninterface FadeProps {\n  animationToggle?: boolean\n  animationTranslate?: boolean\n  children: React.ReactNode\n}\n\nconst Fade = ({ children, animationToggle = false, animationTranslate = true }: FadeProps) => {\n  const ref = useRef(null)\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const currentRef = ref?.current\n    if (!currentRef) return\n\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (animationToggle === true) {\n          setIsVisible(entry.isIntersecting)\n        } else {\n          entry.isIntersecting && setIsVisible(true)\n        }\n      })\n    })\n\n    observer.observe(currentRef)\n\n    return () => observer.unobserve(currentRef)\n  })\n\n  return (\n    <div\n      ref={ref}\n      className={classNames({\n        [styles.base]: true,\n        [styles['base--is-hidden']]: !isVisible,\n        [styles['base--has-translate']]: animationTranslate,\n      })}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Fade\n","import React from 'react'\nimport { IconBaseProps } from 'react-icons'\nimport * as Bs from 'react-icons/bs'\nimport * as io5 from 'react-icons/io5'\nimport * as io from 'react-icons/io'\nimport * as fa from 'react-icons/fa'\n// TODO: monitor file size and optimize if necessary\n// npm install @react-icons/all-files --save -> import { FaBeer } from \"@react-icons/all-files/fa/FaBeer\";\nconst IconSet = { ...Bs, ...io5, ...io, ...fa }\n\nexport interface IconProps extends IconBaseProps {\n  iconName: keyof typeof IconSet\n  className?: string\n}\n\nconst Icon: React.FC<IconProps> = ({ iconName, className = '', ...props }: IconProps) => {\n  const IconName = IconSet[iconName]\n  return IconName ? <IconName className={className} {...props} /> : null\n}\n\nexport default Icon\n","export const getStorageItem = (key: string) => {\n  try {\n    const item = window.localStorage.getItem(key)\n    return item && JSON.parse(item)\n  } catch (error: unknown) {\n    return null\n  }\n}\n\nexport const setStorageItem = (key: string, data: unknown) => {\n  try {\n    window.localStorage.setItem(key, JSON.stringify(data))\n  } catch (error: unknown) {\n    return undefined\n  }\n}\n\nexport const removeStorageItem = (key: string) => {\n  try {\n    window.localStorage.removeItem(key)\n  } catch (error) {\n    return undefined\n  }\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react'\nimport { getStorageItem, setStorageItem } from '../utilities/storage'\n\nconst useLocalStorage = <T>(key: string, initialState: T | null = null): [T, Dispatch<SetStateAction<T>>] => {\n  const [data, setData] = useState<T>(() => getStorageItem(key) || initialState)\n\n  useEffect(() => {\n    setStorageItem(key, data)\n  }, [data])\n\n  return [data, setData]\n}\n\nexport default useLocalStorage\n","import { AxiosResponse } from 'axios'\nimport client from '.'\nimport { ContactFormModel, User } from '../components/ContactForm'\n\ninterface UserResponse extends User {\n  exists: boolean\n  fullName: string\n}\n\nexport const createUser = (data: ContactFormModel): Promise<AxiosResponse<UserResponse>> =>\n  client.post(`api/v1/users`, data)\n","import { ContactFormModel } from '.'\n\ninterface FormError {\n  firstName: string\n  lastName: string\n  email: string\n  comments: string\n}\n\nconst validateEmail = ({ email }: { email: string }) =>\n  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)\n\nexport const validateForm = (values: ContactFormModel): FormError => {\n  const errors = {} as FormError\n\n  if (values.firstName.length < 2) {\n    errors.firstName = 'Required'\n  } else if (values.firstName.length > 25) {\n    errors.firstName = 'Must be 25 characters or less'\n  }\n\n  if (values.lastName.length < 2) {\n    errors.lastName = 'Required'\n  } else if (values.lastName.length > 25) {\n    errors.lastName = 'Must be 25 characters or less'\n  }\n\n  if (!values.email) {\n    errors.email = 'Required'\n  } else if (validateEmail(values)) {\n    errors.email = 'Please enter a valid email address'\n  }\n\n  if (!values.comments) {\n    errors.comments = 'Required'\n  } else if (values.comments.length < 5) {\n    errors.comments = 'Please enter at least 5 characters'\n  }\n\n  return errors\n}\n","import React, { ReactNode, useEffect, useRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport Icon from '../Icon'\n// import './index.scss';\n// using TailwindCSS for Modal\n\nexport interface ModalProps {\n  isVisible: boolean\n  title: string\n  content: ReactNode | string\n  hideModal: () => void\n}\n\nfunction Modal({ isVisible, hideModal, title, content }: ModalProps): React.ReactPortal | null {\n  const btnCloseRef = useRef<HTMLButtonElement | null>(null)\n\n  useEffect(() => {\n    function keylogger(e: KeyboardEvent): void {\n      const key: string = e.key\n\n      if (key === 'Escape') {\n        // close on escape\n        hideModal()\n      } else if (key === 'Tab' || key === 'Enter') {\n        // trap and keep focus in modal.\n        btnCloseRef.current && btnCloseRef.current.focus()\n      }\n    }\n\n    if (isVisible) {\n      document.addEventListener('keyup', keylogger)\n    } else {\n      document.removeEventListener('keyup', keylogger)\n    }\n\n    return () => document.removeEventListener('keyup', keylogger)\n  }, [isVisible, hideModal])\n\n  return isVisible\n    ? createPortal(\n        <>\n          <div className=\"modal-overlay fixed top-0 left-0 bg-black opacity-70 w-full h-full z-30\"></div>\n          <div className=\"modal-wrap fixed top-0 left-0 w-full h-full overflow-x-hidden overflow-y-auto z-40\">\n            <div className=\"modal absolute w-11/12 md:w-1/2 top-1/3 left-1/2 transform -translate-x-1/2 -translate-y-1/2 dark:bg-slate-800 rounded-lg p-6 ring-1 ring-slate-700 shadow-xl z-50\">\n              {title && (\n                <h3 className=\"text-slate-900 dark:text-white mb-5 text-base font-medium\">{title}</h3>\n              )}\n              <div className=\"text-slate-500 dark:text-slate-400 mt-2 text-sm leading-5\">{content}</div>\n\n              <button\n                className=\"stroke-white hover:bg-slate-600 absolute top-3 right-3 p-1 rounded-md\"\n                type=\"button\"\n                ref={btnCloseRef}\n                onClick={hideModal}\n              >\n                <Icon iconName=\"IoMdClose\" color=\"#eabb00\" size=\"22px\" />\n              </button>\n            </div>\n          </div>\n        </>,\n        document.body\n      )\n    : null\n}\n\nexport default Modal\n","import { useState } from 'react'\n\nimport Modal from '../components/Modal'\n\ninterface UseModalReturnType {\n  isVisible: boolean\n  toggleIsVisible: () => void\n  Modal: typeof Modal\n}\n\nfunction useModal(): UseModalReturnType {\n  const [isVisible, setIsVisible] = useState(false)\n\n  const toggleIsVisible = () => setIsVisible(!isVisible)\n\n  return {\n    isVisible,\n    toggleIsVisible,\n    Modal,\n  }\n}\n\nexport default useModal\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"FieldLabel_label__RotDe\",\"label--is-hidden\":\"FieldLabel_label--is-hidden__9Vriq\"};","import React from 'react'\nimport classNames from 'classnames'\nimport styles from './index.module.scss'\n\ninterface FieldLabelProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  id: string\n  hideLabel?: boolean\n  className?: string\n  error?: boolean\n  children: React.ReactNode\n}\n\nfunction FieldLabel({ id, error = false, hideLabel = true, children }: FieldLabelProps) {\n  return (\n    <label\n      className={classNames({\n        [styles.label]: true,\n        [styles['label--is-invalid']]: error,\n        [styles['label--is-hidden']]: hideLabel,\n      })}\n      htmlFor={id}\n    >\n      {children}\n    </label>\n  )\n}\n\nexport default FieldLabel\n","// extracted by mini-css-extract-plugin\nexport default {\"field-input\":\"FieldInput_field-input__5CHko\",\"field-input--light\":\"FieldInput_field-input--light__9OGWQ\",\"field-input--dark\":\"FieldInput_field-input--dark__M8Vzk\",\"field-input--is-invalid\":\"FieldInput_field-input--is-invalid__UpUh9\"};","import React, { forwardRef } from 'react'\nimport classNames from 'classnames'\n\nimport styles from './index.module.scss'\n\ninterface FieldInputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  id: string\n  name: string\n  type?: React.HTMLInputTypeAttribute // should type be required\n  className?: string\n  error: boolean\n  valid?: boolean\n  variant?: 'dark' | 'light'\n}\n\nconst FieldInput = forwardRef<HTMLInputElement, FieldInputProps>(function FieldInput(\n  { id, name, type = 'text', error, valid, ...props }: FieldInputProps,\n  ref: React.Ref<HTMLInputElement>\n) {\n  return (\n    <input\n      id={id}\n      ref={ref}\n      name={name}\n      type={type}\n      className={classNames({\n        [styles['field-input']]: true,\n        [styles['field-input--is-invalid']]: error,\n        [styles['field-input--is-valid']]: valid,\n      })}\n      {...props}\n    />\n  )\n})\n\nexport default FieldInput\n","// extracted by mini-css-extract-plugin\nexport default {\"validation-message\":\"FieldMessage_validation-message__NibMX\",\"validation-message--is-invalid\":\"FieldMessage_validation-message--is-invalid__0B5ND\",\"validation-message--is-valid\":\"FieldMessage_validation-message--is-valid__TzUA5\"};","import React from 'react'\nimport classNames from 'classnames'\n\nimport styles from './index.module.scss'\n\ninterface FieldMessageProps {\n  error: boolean\n  children: React.ReactNode\n}\n\nconst FieldMessage = ({ error, children }: FieldMessageProps) =>\n  error ? (\n    <span\n      className={classNames({\n        [styles['validation-message']]: true,\n        [styles['validation-message--is-invalid']]: error,\n        [styles['validation-message--is-valid']]: false,\n      })}\n    >\n      {children}\n    </span>\n  ) : null\n\nexport default FieldMessage\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"Field_field__wn5IX\"};","import React, { forwardRef } from 'react'\n\nimport FieldLabel from '../FieldLabel'\nimport FieldInput from '../FieldInput'\nimport FieldMessage from '../FieldMessage'\n\nimport styles from './index.module.scss'\n\n// TODO HOW TO PASS IN INDVIDUAL PROPS\ninterface FieldProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  id: string\n  ref?: React.Ref<HTMLInputElement>\n  type: React.HTMLInputTypeAttribute\n  name: string\n  error: boolean\n  msg?: string\n  label?: string\n  hideLabel?: boolean // do we need this\n  className?: string\n}\n\nconst Field = forwardRef(function Field(\n  { id, name, error, msg, label, hideLabel = true, type = 'text', ...props }: FieldProps,\n  ref: React.Ref<HTMLInputElement>\n) {\n  // TODO weigh variant\n  // how to do input variant dark, light vs error, valid variant. not sure state should be a variant?\n  const generatedID = `field-${type}-${id}`\n\n  return (\n    <div className={styles.field}>\n      {label && (\n        <FieldLabel id={generatedID} error={error} hideLabel={hideLabel}>\n          {label}\n        </FieldLabel>\n      )}\n      <FieldInput ref={ref} id={generatedID} name={name} type={type} error={error} {...props} />\n      {msg && <FieldMessage error={error}>{msg}</FieldMessage>}\n    </div>\n  )\n})\n\nexport default Field\n","// extracted by mini-css-extract-plugin\nexport default {\"confirmEmail\":\"FieldInputTrap_confirmEmail__ReCfs\"};","import React from 'react'\nimport styles from './index.module.scss'\n\ninterface FieldInputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst FieldInputTrap = (props: FieldInputProps) => (\n  <input className={styles.confirmEmail} type=\"text\" {...props} />\n)\n\nexport default FieldInputTrap\n","// extracted by mini-css-extract-plugin\nexport default {\"control-textarea\":\"FieldTextArea_control-textarea__mNfp2\",\"textarea\":\"FieldTextArea_textarea__s0dgR\",\"textarea--is-invalid\":\"FieldTextArea_textarea--is-invalid__7viYK\"};","import React, { forwardRef } from 'react'\nimport classNames from 'classnames'\n\nimport FieldLabel from '../FieldLabel'\nimport FieldMessage from '../FieldMessage'\nimport styles from './index.module.scss'\n\ninterface FieldTextAreaProps extends React.InputHTMLAttributes<HTMLTextAreaElement> {\n  name: string\n  id: string\n  label?: string\n  hideLabel?: boolean\n  msg?: string\n  className?: string\n  error: boolean\n  valid?: boolean\n  rows?: number\n  cols?: number\n}\n\nconst FieldTextArea = forwardRef(function FieldTextArea(\n  { id, name, msg, label, hideLabel = false, error, valid, ...props }: FieldTextAreaProps,\n  ref: React.Ref<HTMLTextAreaElement>\n) {\n  const generatedId = `control-textarea-${id}`\n\n  return (\n    <div className={styles['control-textarea']}>\n      {label && (\n        <FieldLabel id={generatedId} hideLabel={hideLabel}>\n          {label}\n        </FieldLabel>\n      )}\n\n      <textarea\n        ref={ref}\n        id={generatedId}\n        name={name}\n        className={classNames({\n          [styles.textarea]: true,\n          [styles['textarea--is-invalid']]: error,\n          [styles['textarea--is-valid']]: valid,\n        })}\n        {...props}\n      />\n\n      {msg && <FieldMessage error={error}>{msg}</FieldMessage>}\n    </div>\n  )\n})\n\nexport default FieldTextArea\n","import { toast, ToastOptions } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst DEFAULT_OPTIONS: ToastOptions = {\n  position: 'top-right',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  theme: 'dark',\n}\n\nconst success = (message: string) => toast.success(message, DEFAULT_OPTIONS)\nconst error = (message: string) => toast.error(message, DEFAULT_OPTIONS)\nconst warning = (message: string) => toast.warning(message, DEFAULT_OPTIONS)\nconst info = (message: string) => toast(message, DEFAULT_OPTIONS)\n\nconst exp = {\n  success,\n  error,\n  warning,\n  info,\n}\n\nexport default exp\n","const SuccessMessage = ({ name = 'Visitor' }: { name: string }) => {\n  return (\n    <>\n      <p className=\"text-slate-500 dark:text-slate-400 mt-2 text-sm\">\n        Hello <strong style={{ color: '#eabb00', fontWeight: 'bold' }}>{name}</strong>,\n      </p>\n      <p className=\"text-slate-500 dark:text-slate-400 mt-2 text-sm leading-5\">\n        This form is wired up to a 🔥 <code>Firebase Firestore</code> NoSQL database on the backend and uses\n        the <strong style={{ color: '#eabb00', fontWeight: 'bold' }}>formik</strong> validation library on the\n        client. Source code is available at my{' '}\n        <strong style={{ color: '#eabb00', fontWeight: 'bold' }}>GitHub</strong> repo.{' '}\n        <a\n          className=\"text-blue-500\"\n          href=\"https://github.com/jasoncsmith/React-Portfolio\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Check it out\n        </a>\n      </p>\n    </>\n  )\n}\n\nexport default SuccessMessage\n","// extracted by mini-css-extract-plugin\nexport default {\"contact-form\":\"ContactForm_contact-form__YS+Nw\",\"placeholder\":\"ContactForm_placeholder__FEzGD\",\"contact-form__column\":\"ContactForm_contact-form__column__g5HhS\",\"contact-form__group\":\"ContactForm_contact-form__group__QPovm\",\"field\":\"ContactForm_field__THCxO\",\"contact-form__btn-submit\":\"ContactForm_contact-form__btn-submit__KpoAO\"};","import React from 'react'\nimport { useEffect, useRef, useState } from 'react'\nimport { useFormik } from 'formik'\nimport pickBy from 'lodash/pickBy'\nimport pick from 'lodash/pick'\nimport omit from 'lodash/omit'\n\nimport { createUser } from '../../api/user'\nimport { validateForm } from './helpers'\n\nimport useModal from '../../hooks/useModal'\nimport useLocalStorage from '../../hooks/useLocalStorage'\n\nimport Field from '../Field'\nimport FieldInputTrap from '../FieldInputTrap'\nimport FieldLabel from '../FieldLabel'\nimport FieldTextArea from '../FieldTextArea'\nimport Button from '../Button'\nimport toasts from '../Toast'\nimport Fade from '../Fade'\nimport SuccessMessage from './components/SuccessMessage'\n\nimport styles from './index.module.scss'\n\nconst capitalizeFirstLetter = (str: string) =>\n  str.length > 0 ? [str[0].toUpperCase(), ...str.split('').slice(1)].join('') : str\n\nexport interface User {\n  id: number\n  firstName: string\n  lastName: string\n  fullName: string\n  email: string\n  company?: string\n}\n\nexport interface ContactFormModel extends Omit<User, 'id' | 'fullName'> {\n  comments: string\n  confirmEmail?: string\n}\n\ninterface ModalContent {\n  title: string\n  content: JSX.Element\n}\n\nconst initialData: ContactFormModel = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  company: '',\n  comments: '',\n}\n\nconst ContactForm = () => {\n  const ref = useRef<HTMLInputElement>(null)\n  const refTextArea = useRef<HTMLTextAreaElement>(null)\n  const [isWaiting, setIsWaiting] = useState(false)\n  const [msg, setMessage] = useState<ModalContent>({\n    title: '',\n    content: <></>,\n  })\n\n  const modal = useModal()\n  const [user, setUser] = useLocalStorage<User | null>('user')\n  const formik = useFormik({\n    initialValues: { ...initialData, ...pick(user, 'firstName', 'lastName', 'email', 'company') },\n    validate: validateForm,\n    onSubmit: values => send(values),\n    enableReinitialize: true, // will fill in latest vals after reset\n  })\n\n  function handleSuccess(status: number, data: User) {\n    if (status === 200 || status === 201) {\n      setMessage({\n        title: status === 201 ? 'Thanks for Visiting!' : 'Welcome Back!',\n        content: <SuccessMessage name={capitalizeFirstLetter(data.fullName)} />,\n      })\n      modal.toggleIsVisible()\n      setUser(omit(pickBy(data), 'exists') as User)\n    } else if (status === 202) {\n      // spambot\n      toasts.success('Thank you for your comments')\n    }\n  }\n\n  const send = async (model: ContactFormModel): Promise<void> => {\n    setIsWaiting(true)\n    try {\n      const { data, status } = await createUser(model)\n      handleSuccess(status, data)\n      formik.handleReset(null)\n    } catch (error: unknown) {\n      toasts.error('Sorry, there was an error submitting this form.')\n    } finally {\n      setIsWaiting(false)\n    }\n  }\n\n  useEffect(() => {\n    user ? refTextArea.current?.focus() : ref.current?.focus()\n  }, [])\n\n  return (\n    <Fade>\n      <form autoFocus onSubmit={formik.handleSubmit} className={styles['contact-form']}>\n        <div className={styles['contact-form__column']}>\n          <div className={styles['contact-form__group']}>\n            <Field\n              ref={ref}\n              id=\"firstName\"\n              name=\"firstName\"\n              type=\"text\"\n              label=\"First Name*\"\n              placeholder=\"First Name*\"\n              tabIndex={1}\n              maxLength={25}\n              error={!!formik.touched.firstName && !!formik.errors.firstName}\n              msg={formik.errors.firstName}\n              value={formik.values.firstName}\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n            />\n\n            <Field\n              id=\"lastName\"\n              name=\"lastName\"\n              type=\"text\"\n              label=\"Last Name*\"\n              placeholder=\"Last Name*\"\n              tabIndex={2}\n              maxLength={25}\n              error={!!formik.touched.lastName && !!formik.errors.lastName}\n              msg={formik.errors.lastName}\n              value={formik.values.lastName}\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n            />\n          </div>\n\n          <Field\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            label=\"Email*\"\n            placeholder=\"Email*\"\n            tabIndex={3}\n            maxLength={40}\n            error={!!formik.touched.email && !!formik.errors.email}\n            msg={formik.errors.email}\n            value={formik.values.email}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n          />\n\n          <Field\n            id=\"company\"\n            name=\"company\"\n            type=\"text\"\n            label=\"Company\"\n            placeholder=\"Company\"\n            tabIndex={4}\n            maxLength={25}\n            error={false}\n            msg={''}\n            value={formik.values.company}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n          />\n\n          <div className=\"confirmEmail\">\n            <FieldLabel id={'confirmEmail'} hideLabel={true}>\n              Honeytrap\n            </FieldLabel>\n            <FieldInputTrap\n              name=\"confirmEmail\"\n              type=\"text\"\n              value={formik.values.confirmEmail}\n              onChange={formik.handleChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles['contact-form__column']}>\n          <FieldTextArea\n            id=\"comments\"\n            name=\"comments\"\n            ref={refTextArea}\n            placeholder=\"Greetings, questions, comments...*\"\n            rows={7}\n            cols={37}\n            tabIndex={5}\n            maxLength={275}\n            value={formik.values.comments}\n            msg={formik.errors.comments}\n            error={!!formik.touched.comments && !!formik.errors.comments}\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n          />\n        </div>\n\n        <Button\n          buttonType=\"button\"\n          type=\"submit\"\n          tabIndex={6}\n          isLoading={isWaiting}\n          className={styles['contact-form__btn-submit']}\n        >\n          Transmit\n        </Button>\n      </form>\n\n      <modal.Modal\n        isVisible={modal.isVisible}\n        hideModal={modal.toggleIsVisible}\n        content={msg.content}\n        title={msg.title}\n      />\n    </Fade>\n  )\n}\n\nexport default ContactForm\n","import ContactForm from '../../components/ContactForm'\n\nimport './index.scss'\n\nexport default function Contact(): JSX.Element {\n  return (\n    <div id=\"view-contact\" className=\"view view-contact\">\n      <header className=\"view__header\">\n        <h2>Contact Me</h2>\n      </header>\n\n      <section>\n        <ContactForm />\n      </section>\n    </div>\n  )\n}\n"],"names":["axios","baseURL","_ref","children","className","buttonType","isLoading","iconName","props","Component","_jsxs","classNames","styles","_jsx","Loader","Icon","animationToggle","animationTranslate","ref","useRef","isVisible","setIsVisible","useState","useEffect","currentRef","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","unobserve","IconSet","Bs","io5","io","fa","IconName","key","initialState","arguments","length","undefined","data","setData","item","window","localStorage","getItem","JSON","parse","error","getStorageItem","setStorageItem","setItem","stringify","validateForm","values","errors","firstName","lastName","email","test","validateEmail","comments","hideModal","title","content","btnCloseRef","keylogger","e","focus","document","addEventListener","removeEventListener","createPortal","_Fragment","type","onClick","color","size","body","toggleIsVisible","Modal","id","hideLabel","htmlFor","FieldInput","forwardRef","name","valid","Field","msg","label","generatedID","concat","FieldLabel","FieldMessage","FieldTextArea","generatedId","DEFAULT_OPTIONS","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","theme","success","message","toast","warning","info","style","fontWeight","href","target","rel","initialData","company","ContactForm","refTextArea","isWaiting","setIsWaiting","setMessage","modal","useModal","user","setUser","useLocalStorage","formik","useFormik","initialValues","pick","validate","onSubmit","send","enableReinitialize","async","status","client","createUser","model","str","SuccessMessage","fullName","toUpperCase","split","slice","join","omit","pickBy","toasts","handleSuccess","handleReset","_refTextArea$current","_ref$current","Fade","autoFocus","handleSubmit","placeholder","tabIndex","maxLength","touched","value","onBlur","handleBlur","onChange","handleChange","FieldInputTrap","confirmEmail","rows","cols","Button","Contact"],"sourceRoot":""}